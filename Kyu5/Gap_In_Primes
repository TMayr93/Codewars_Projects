#efficiently finding the first neighboring prime numbers with gap g with high range input

def gap(g, m, n):
    n = n + 1
    if m % 2 == 0:
        m = m + 1
    sieve = [True] * n
    for i in range(3,int(n**0.5)+1,2):
        if sieve[i]:
            sieve[i*i::2*i]=[False]*((n-i*i-1)//(2*i)+1)
    lst = [i for i in range(m,n,2) if sieve[i]]
    for i in range(len(lst)-1):
        if lst[i] + g == lst[i+1]:
            return [lst[i], lst[i+1]]
